<?php

/**
 * AclRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class AclRole extends Table_AclRole
{

    protected static $_loadList = null;

  /*  const ROLE_TESTER = 'guest';

    const ROLE_USER = 'user';

    const ROLE_ADMIN = 'admin';

*/
    /**
     * @param array $options
     * @return Doctrine_Query
     */
    public static function getQuery($options = array())
    {
        $query = parent::getQuery($options);

        if(isset($options['is_visible']) && $options['is_visible']){
            $query->addWhere('o.is_visible = ?', $options['is_visible']);
        }

        if(array_key_exists('object', $options)){
            if($options['object']){
                $query->addWhere('o.object = ?', $options['object']);
            }else{
                $query->addWhere('o.object IS NULL');
            }
        }


        return $query;
    }




    public static function getValueByCol($id, $col)
    {
        $list = self::loadList();

        return isset($list[$id][$col]) ? $list[$id][$col] : '';
    }

    public static function getNameRoleById($id)
    {
        $query = Doctrine_Query::create()
            ->select('o.name_role')
            ->from('AclRole o')
            ->where('o.id_acl_role = ?', $id);


        return $query->fetchOne();
    }

    public static function loadList()
    {
        if(null === self::$_loadList){
            self::$_loadList = self::getList(array('coll_key' => 'name_role'));
        }

        return self::$_loadList;
    }

    public static function getFullNameRoleById($id)
    {
        $query = Doctrine_Query::create()
            ->select('o.name')
            ->from('AclRole o')
            ->where('o.id_acl_role = ?', $id);


        return $query->fetchOne();
    }

    public static function getListArray()
    {
        $result = self::getList();
        $listOptions = array();
        foreach ($result as $row) {
            $listOptions[$row['id_acl_role']] = $row['name'];
        }

        return $listOptions;
    }

    public static function getListParent($id_acl_role)
    {
        $listArray = self::getListArray();

        unset($listArray[$id_acl_role]);

        return $listArray;
    }

    public static function getGroupRole($array, $pid = null)
    {
        $op = array();
        foreach( $array as $item ) {
            if( $item['id_parent'] == $pid ) {
                $op[$item['id_acl_role']] = array(
                    'name' => $item['name'],
                    'id_parent' => $item['id_parent'],
                    'id_acl_role' => $item['id_acl_role']
                );
                // using recursion
                $children =  self::getGroupRole( $array, $item['id_acl_role'] );
                if( $children ) {
                    $op[$item['id_acl_role']]['children'] = $children;
                }
            }
        }

        return $op;
    }

    public function postSave($event)
    {
        parent::postSave($event);

        Base_Cache::clean();
    }
}