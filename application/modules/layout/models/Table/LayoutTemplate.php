<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LayoutTemplate', 'base');

/**
 * Table_LayoutTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_layout_template
 * @property boolean $is_default
 * @property boolean $is_system
 * @property string  $name
 * @property string  $filename
 * @property string $data_map
 * 
 * @method integer getId()
 * @method boolean isNew()
 * @method static Layout_template find($id, $tableName = null)
 * @method static Layout_template findOneBy*
 * @static Doctrine_Collection findBy*
 * 
 * @method static getIdLayoutTemplateById() getIdLayoutTemplateById($id)
 * @method getIdLayoutTemplate() getIdLayoutTemplate()
 * @method setIdLayoutTemplate() setIdLayoutTemplate($value)
 * @method static getIsDefaultById() getIsDefaultById($id)
 * @method getIsDefault() getIsDefault()
 * @method setIsDefault() setIsDefault($value)
 * @method static getIsSystemById() getIsSystemById($id)
 * @method getIsSystem() getIsSystem()
 * @method setIsSystem() setIsSystem($value)
 * @method static getNameById() getNameById($id)
 * @method getName() getName()
 * @method setName() setName($value)
 * @method static getFilenameById() getFilenameById($id)
 * @method getFilename() getFilename()
 * @method setFilename() setFilename($value)
 * @method static getDataMapById() getDataMapById($id)
 * @method getDataMap() getDataMap()
 * @method setDataMap() setDataMap($value)
 * 
 * @property Doctrine_Collection $Layouts
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Table_LayoutTemplate extends Base_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('layout_template');
        $this->hasColumn('id_layout_template', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'can_import' => true,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'can_import' => true,
             ));
        $this->hasColumn('is_system', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'can_import' => true,
             ));
        $this->hasColumn('name', 'string ', 255, array(
             'type' => 'string ',
             'length' => '255',
             'can_import' => true,
             ));
        $this->hasColumn('filename', 'string ', 255, array(
             'type' => 'string ',
             'length' => '255',
             'can_import' => true,
             ));
        $this->hasColumn('data_map', 'string', null, array(
             'type' => 'string',
             'can_import' => true,
             ));

        $this->option('service', false);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Layout as Layouts', array(
             'local' => 'id_layout_template',
             'foreign' => 'id_layout_template'));
    }
}