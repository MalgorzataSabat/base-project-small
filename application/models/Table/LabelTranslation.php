<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LabelTranslation', 'base');

/**
 * Table_LabelTranslation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_label
 * @property integer $id_language
 * @property string $value
 * 
 * @method integer getId()
 * @method boolean isNew()
 * @method static Label_translation find($id, $tableName = null)
 * @method static Label_translation findOneBy*
 * @static Doctrine_Collection findBy*
 * 
 * @method static getIdLabelById() getIdLabelById($id)
 * @method getIdLabel() getIdLabel()
 * @method setIdLabel() setIdLabel($value)
 * @method static getIdLanguageById() getIdLanguageById($id)
 * @method getIdLanguage() getIdLanguage()
 * @method setIdLanguage() setIdLanguage($value)
 * @method static getValueById() getValueById($id)
 * @method getValue() getValue()
 * @method setValue() setValue($value)
 * 
 * @property Label $Label
 * @property Language $Language
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Table_LabelTranslation extends Base_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('label_translation');
        $this->hasColumn('id_label', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'can_import' => true,
             ));
        $this->hasColumn('id_language', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'can_import' => true,
             ));
        $this->hasColumn('value', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'can_import' => true,
             ));


        $this->setAttribute(Doctrine_Core::ATTR_COLL_KEY, 'id_language');

        $this->option('service', false);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Label', array(
             'local' => 'id_label',
             'foreign' => 'id_label',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Language', array(
             'local' => 'id_language',
             'foreign' => 'id_language',
             'onDelete' => 'CASCADE'));
    }
}