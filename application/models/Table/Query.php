<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Query', 'base');

/**
 * Table_Query
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_query
 * @property string  $hash
 * @property integer $id_user
 * @property timestamp $created_at
 * @property boolean $is_public
 * @property boolean $is_default
 * @property integer $order
 * @property string $title
 * @property string $form
 * @property string $data
 * @property integer $id_service
 * 
 * @method integer getId()
 * @method boolean isNew()
 * @method static Query find($id, $tableName = null)
 * @method static Query findOneBy*
 * @static Doctrine_Collection findBy*
 * 
 * @method static getIdQueryById() getIdQueryById($id)
 * @method getIdQuery() getIdQuery()
 * @method setIdQuery() setIdQuery($value)
 * @method static getHashById() getHashById($id)
 * @method getHash() getHash()
 * @method setHash() setHash($value)
 * @method static getIdUserById() getIdUserById($id)
 * @method getIdUser() getIdUser()
 * @method setIdUser() setIdUser($value)
 * @method static getCreatedAtById() getCreatedAtById($id)
 * @method getCreatedAt() getCreatedAt()
 * @method setCreatedAt() setCreatedAt($value)
 * @method static getIsPublicById() getIsPublicById($id)
 * @method getIsPublic() getIsPublic()
 * @method setIsPublic() setIsPublic($value)
 * @method static getIsDefaultById() getIsDefaultById($id)
 * @method getIsDefault() getIsDefault()
 * @method setIsDefault() setIsDefault($value)
 * @method static getOrderById() getOrderById($id)
 * @method getOrder() getOrder()
 * @method setOrder() setOrder($value)
 * @method static getTitleById() getTitleById($id)
 * @method getTitle() getTitle()
 * @method setTitle() setTitle($value)
 * @method static getFormById() getFormById($id)
 * @method getForm() getForm()
 * @method setForm() setForm($value)
 * @method static getDataById() getDataById($id)
 * @method getData() getData()
 * @method setData() setData($value)
 * @method static getIdServiceById() getIdServiceById($id)
 * @method getIdService() getIdService()
 * @method setIdService() setIdService($value)
 * 
 * @property User $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Table_Query extends Base_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('query');
        $this->hasColumn('id_query', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'can_import' => true,
             ));
        $this->hasColumn('hash', 'string ', 32, array(
             'type' => 'string ',
             'length' => '32',
             'can_import' => true,
             ));
        $this->hasColumn('id_user', 'integer', null, array(
             'type' => 'integer',
             'can_import' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'can_import' => true,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'can_import' => true,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'can_import' => true,
             ));
        $this->hasColumn('order', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'can_import' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'can_import' => true,
             ));
        $this->hasColumn('form', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             'can_import' => true,
             ));
        $this->hasColumn('data', 'string', null, array(
             'type' => 'string',
             'can_import' => true,
             ));
        $this->hasColumn('id_service', 'integer', null, array(
             'type' => 'integer',
             'can_import' => false,
             'log' => false,
             ));

        $this->option('orderBy', 'order ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'id_user',
             'foreign' => 'id_user',
             'onDelete' => 'CASCADE'));
    }
}