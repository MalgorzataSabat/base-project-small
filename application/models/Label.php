<?php

/**
 * Label
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Label extends Table_Label
{

    const TYPE_LABEL = 'label';

    const TYPE_ROUTE = 'route';


    public static function getQuery($options = array())
    {
        $query = parent::getQuery($options);

        $query->addSelect('t.id_language as id_language, t.value as value');
        $query->innerJoin('o.Translations t');
        $query->addWhere('t.id_language = ?', Base_I18n::getLangId());

        if ( @strlen( $options['type'] ) > 0 ) {
            $query->addWhere('o.type = ?', $options['type']);
        }

        if ( isset( $options['label'] ) && !empty( $options['label'] ) ) {
            $query->addWhere('o.label LIKE ?', '%' . $options['label'] . '%');
        }

        if ( isset( $options['value'] ) && !empty( $options['value'] ) ) {
            $query->addWhere('t.value LIKE ?', '%' . $options['value'] . '%');
        }

        if ( isset( $options['_module'] ) && !empty($options['_module'])) {
            if($options['_module'] == 'empty'){
                $query->addWhere('o.module = ""');
            } else {
                $query->addWhere('o.module = ?', $options['_module']);
            }
        }

        if ( isset( $options['date_min'] ) && !empty( $options['date_min'] ) ) {
            $query->addWhere('o.modified_at >= ?', $options['date_min']);
        }

        if ( isset( $options['date_max'] ) && !empty( $options['date_max'] ) ) {
            $query->addWhere('o.modified_at <= ?', $options['date_max']);
        }

        return $query;
    }

    /**
     * @return array
     */
    public static function getTypes()
    {
        return array(self::TYPE_LABEL => self::TYPE_LABEL, self::TYPE_ROUTE =>self::TYPE_ROUTE);
    }

    /**
     * @param $value
     * @param $id_language
     * @return $this
     */
    public function setValue($value, $id_language)
    {
        $this->Translations[$id_language]->value = $value;

        return $this;
    }


    /**
     * @param $id_language integer
     * @param $type string
     * @return array
     */
    public static function getLabels($id_language, $type = 'label')
    {
        $cache = Base_Cache::getCache();
        $cache_name = 'label_'.$id_language.'_'.$type;
        $labels = $cache->load($cache_name);

        if(false == $labels){
            $result = Doctrine_Query::create()
                ->select('l.id_label, l.label, t.value as value')
                ->from(__CLASS__.' l INDEXBY l.id_label')
                ->innerJoin('l.Translations t')
                ->addWhere('t.id_language = ?', $id_language)
                ->addWhere('l.type = ?', $type)
                ->execute(array(), Doctrine::HYDRATE_ARRAY);

            foreach($result as $v){
                $labels[$v['label']] = $v['value'];
            }

            $cache->save($labels, $cache_name);
        }

        return !empty($labels) ? $labels : array('' => '');
    }

    /**
     * Add modification date before save
     * @param $event
     */
    public function preSave($event)
    {
        parent::preSave($event);
        $this->modified_at = date('YmdHis');
    }

    /**
     * Clean cache when add or modification label
     * @param $event
     */
    public function postSave($event)
    {
        parent::postSave($event);
        Base_Cache::clean();
    }
}